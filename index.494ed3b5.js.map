{"mappings":"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","sources":["src/js/buy-now.js"],"sourcesContent":["(() => {\r\n  const refs = {\r\n    openModalBtn: document.querySelectorAll('[data-open-buy]'),\r\n    closeModalBtn: document.querySelector('[data-close-buy]'),\r\n    backdrop2: document.querySelector('[data-backdrop-buy]'),\r\n  };\r\n  refs.closeModalBtn.addEventListener('click', toggleModal1);\r\n\r\n  function toggleModal1() {\r\n    refs.backdrop2.classList.toggle('is-hidden-buy');\r\n  }\r\n  refs.openModalBtn.forEach(elem =>\r\n    elem.addEventListener('click', toggleModal1)\r\n  );\r\n})();\r\n\r\nfunction validation(form) {\r\n  function removeError(input) {\r\n    const parent = input.parentNode;\r\n\r\n    if (parent.classList.contains('error')) {\r\n      parent.querySelector('.error-label').remove();\r\n      parent.classList.remove('error');\r\n    }\r\n  }\r\n\r\n  function createError(input, text) {\r\n    const parent = input.parentNode;\r\n    const errorLabel = document.createElement('label');\r\n\r\n    errorLabel.classList.add('error-label');\r\n    errorLabel.textContent = text;\r\n\r\n    parent.classList.add('error');\r\n\r\n    parent.append(errorLabel);\r\n  }\r\n\r\n  let result = true;\r\n\r\n  const allInputs = form.querySelectorAll('input');\r\n\r\n  for (const input of allInputs) {\r\n    removeError(input);\r\n\r\n    if (input.dataset.minLength) {\r\n      if (input.value.length < input.dataset.minLength) {\r\n        removeError(input);\r\n        createError(input, `Min. length: ${input.dataset.minLength}`);\r\n        result = false;\r\n      }\r\n    }\r\n\r\n    if (input.dataset.maxLength) {\r\n      if (input.value.length > input.dataset.maxLength) {\r\n        removeError(input);\r\n        createError(input, `Max. length: ${input.dataset.maxLength}`);\r\n        result = false;\r\n      }\r\n    }\r\n\r\n    if (input.dataset.required == 'true') {\r\n      if (input.value == '') {\r\n        removeError(input);\r\n        createError(input, 'Поле не заполнено!');\r\n        result = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nconst refsDiscount = {\r\n  openModalBtn: document.querySelector('[data-open-discount]'),\r\n  closeModalBtn: document.querySelector('[data-close-discount]'),\r\n  backdrop4: document.querySelector('[data-backdrop-discount]'),\r\n  discountContainer: document.querySelector('.discount-container'),\r\n};\r\n\r\nfunction toggleModal() {\r\n  refsDiscount.backdrop4.classList.toggle('is-hidden-discount');\r\n}\r\n\r\ndocument\r\n  .getElementById('form_buy-now')\r\n  .addEventListener('submit', function (event) {\r\n    event.preventDefault();\r\n\r\n    if (validation(this) === true) {\r\n      const TOKEN = '6590186759:AAEXDgJPNN-mXGJ5L18tzDES9dWLPunj-qo';\r\n      const CHAT_ID = '-1001917308774';\r\n      const URI_API = `https://api.telegram.org/bot${TOKEN}/sendMessage`;\r\n      const success = document.getElementById('success');\r\n\r\n      refsDiscount.openModalBtn.addEventListener('click', toggleModal);\r\n      refsDiscount.closeModalBtn.addEventListener('click', toggleModal);\r\n\r\n      document\r\n        .getElementById('form_buy-now')\r\n        .addEventListener('submit', function (e) {\r\n          e.preventDefault();\r\n\r\n          let message = `<b>Simply Chocolate Form</b>\\n`;\r\n          message += `<b>Name: </b> <i>${this.name.value}</i> \\n`;\r\n          message += `<b>Surname: </b> <i>${this.surname.value}</i> \\n`;\r\n          message += `<b>Email: </b> ${this.email.value} \\n`;\r\n          message += `<b>Phone: </b> ${this.phonenum.value} \\n`;\r\n          message += `<b>Card: </b> ${this.cardnum.value} \\n`;\r\n          message += `<b>Comment: </b> ${this.comment.value}`;\r\n\r\n          axios\r\n            .post(URI_API, {\r\n              chat_id: CHAT_ID,\r\n              parse_mode: 'html',\r\n              text: message,\r\n            })\r\n            .then(res => {\r\n              this.name.value = '';\r\n              this.surname.value = '';\r\n              this.email.value = '';\r\n              this.phonenum.value = '';\r\n              this.cardnum.value = '';\r\n              this.comment.value = '';\r\n              success.style.display = 'block';\r\n              success.innerHTML = 'Message Send';\r\n            })\r\n            .catch(err => {\r\n              console.warn(err);\r\n            })\r\n            .finally(() => {\r\n              console.log('The end');\r\n              refsDiscount.openModalBtn.removeEventListener(\r\n                'click',\r\n                toggleModal\r\n              );\r\n              document\r\n                .querySelector('[data-backdrop-buy]')\r\n                .classList.toggle('is-hidden-buy');\r\n            });\r\n        });\r\n    }\r\n  });"],"names":["refs","openModalBtn","document","querySelectorAll","closeModalBtn","querySelector","backdrop2","toggleModal1","classList","toggle","addEventListener","forEach","elem","$0bcb1a8b79154807$var$refsDiscount","backdrop4","discountContainer","$0bcb1a8b79154807$var$toggleModal","getElementById","event","preventDefault","form","removeError","input","parent","parentNode","contains","remove","createError","text","errorLabel","createElement","add","textContent","append","result","allInputs","input1","dataset","minLength","value","length","maxLength","required","$0bcb1a8b79154807$var$validation","this","CHAT_ID","URI_API","success","e","message","name","surname","email","phonenum","cardnum","comment","axios","post","chat_id","parse_mode","then","res","style","display","innerHTML","catch","err","console","warn","finally","log","removeEventListener"],"version":3,"file":"index.494ed3b5.js.map"}