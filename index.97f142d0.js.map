{"mappings":"C,A,WCAC,AAAA,CAAA,KACC,IAAM,EAAO,CACX,aAAc,SAAS,gBAAA,CAAiB,mBACxC,cAAe,SAAS,aAAA,CAAc,oBACtC,UAAW,SAAS,aAAA,CAAc,sBACpC,EAGA,SAAS,IACP,EAAK,SAAA,CAAU,SAAA,CAAU,MAAA,CAAO,gBAClC,CAJA,EAAK,aAAA,CAAc,gBAAA,CAAiB,QAAS,GAK7C,EAAK,YAAA,CAAa,OAAA,CAAQ,AAAA,GACxB,EAAK,gBAAA,CAAiB,QAAS,GAEnC,CAAA,IA2DA,IAAM,EAAe,CACnB,aAAc,SAAS,aAAA,CAAc,wBACrC,cAAe,SAAS,aAAA,CAAc,yBACtC,UAAW,SAAS,aAAA,CAAc,4BAClC,kBAAmB,SAAS,aAAA,CAAc,sBAC5C,EAEA,SAAS,IACP,EAAa,SAAA,CAAU,SAAA,CAAU,MAAA,CAAO,qBAC1C,CAEA,SACG,cAAA,CAAe,gBACf,gBAAA,CAAiB,SAAU,SAAU,CAAK,EACzC,EAAM,cAAN,GAEyB,CAAA,IAArB,AAzER,SAAoB,CAAI,EACtB,SAAS,EAAY,CAAK,EACxB,IAAM,EAAS,EAAM,UAArB,CAEI,EAAO,SAAA,CAAU,QAAA,CAAS,WAC5B,EAAO,aAAA,CAAc,gBAAgB,MAArC,GACA,EAAO,SAAA,CAAU,MAAA,CAAO,SAE5B,CAEA,SAAS,EAAY,CAAK,CAAE,CAAI,EAC9B,IAAM,EAAS,EAAM,UAArB,CACM,EAAa,SAAS,aAAA,CAAc,SAE1C,EAAW,SAAA,CAAU,GAAA,CAAI,eACzB,EAAW,WAAA,CAAc,EAEzB,EAAO,SAAA,CAAU,GAAA,CAAI,SAErB,EAAO,MAAA,CAAO,EAChB,CAEA,IAAI,EAAS,CAAA,EAEP,EAAY,EAAK,gBAAA,CAAiB,SAExC,IAAK,IAAM,KAAS,EAClB,EAAY,GAER,EAAM,OAAA,CAAQ,SAAA,EACZ,EAAM,KAAA,CAAM,MAAA,CAAS,EAAM,OAAA,CAAQ,SAAA,GACrC,EAAY,GACZ,EAAY,EAAO,CAAC,aAAa,EAAE,EAAM,OAAA,CAAQ,SAAA,CAAU,CAAC,EAC5D,EAAS,CAAA,GAIT,EAAM,OAAA,CAAQ,SAAA,EACZ,EAAM,KAAA,CAAM,MAAA,CAAS,EAAM,OAAA,CAAQ,SAAA,GACrC,EAAY,GACZ,EAAY,EAAO,CAAC,aAAa,EAAE,EAAM,OAAA,CAAQ,SAAA,CAAU,CAAC,EAC5D,EAAS,CAAA,GAIiB,QAA1B,EAAM,OAAA,CAAQ,QAAA,EACZ,AAAe,IAAf,EAAM,KAAA,GACR,EAAY,GACZ,EAAY,EAAO,sBACnB,EAAS,CAAA,GAKf,OAAO,CACT,EAkBmB,IAAI,IAID,SAAS,cAAA,CAAe,WAExC,EAAa,YAAA,CAAa,gBAAA,CAAiB,QAAS,GACpD,EAAa,aAAA,CAAc,gBAAA,CAAiB,QAAS,GAErD,SACG,cAAA,CAAe,gBACf,gBAAA,CAAiB,SAAU,SAAU,CAAC,EACrC,EAAE,cAAF,GAEA,IAAI,EAAU,CAAC;AAA8B,CAAC,CAM9C,GALW,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAA,CAAK,KAAA,CAC7B;oBAAoB,EAAE,IAAI,CAAC,OAAA,CAAQ,KAAA,CACnC;eAAe,EAAE,IAAI,CAAC,KAAA,CAAM,KAAA,CAC5B;eAAe,EAAE,IAAI,CAAC,QAAA,CAAS,KAAA,CAC/B;cAAc,EAAE,IAAI,CAAC,OAAA,CAAQ,KAAA,CAC7B;iBAAiB,EAAE,IAAI,CAAC,OAAA,CAAQ,KAAA,CAAM,CALK,CAOvD,MACG,IAAA,CApBS,2CAoBK,CACb,QAtBQ,iBAuBR,WAAY,OACZ,KAAM,CACR,GACC,IAAA,CAAK,AAAA,IACJ,IAAI,CAAC,IAAA,CAAK,KAAA,CAAQ,GAClB,IAAI,CAAC,OAAA,CAAQ,KAAA,CAAQ,GACrB,IAAI,CAAC,KAAA,CAAM,KAAA,CAAQ,GACnB,IAAI,CAAC,QAAA,CAAS,KAAA,CAAQ,GACtB,IAAI,CAAC,OAAA,CAAQ,KAAA,CAAQ,GACrB,IAAI,CAAC,OAAA,CAAQ,KAAA,CAAQ,EACrB,oCAAmC;AACnC,sCAAsC;AACxC,GACC,KAAA,CAAM,AAAA,IACL,QAAQ,IAAA,CAAK,EACf,GACC,OAAA,CAAQ,KACP,0BAA0B;AAC1B,EAAa,YAAA,CAAa,mBAAA,CACxB,QACA,GAEF,SACG,aAAA,CAAc,uBACd,SAAA,CAAU,MAAA,CAAO,gBACtB,EACJ,GAEN,E,G,4D","sources":["<anon>","src/js/buy-now.js"],"sourcesContent":["(function () {\nvar $5841c9197f87e075$exports = {};\n(()=>{\n    const refs = {\n        openModalBtn: document.querySelectorAll(\"[data-open-buy]\"),\n        closeModalBtn: document.querySelector(\"[data-close-buy]\"),\n        backdrop2: document.querySelector(\"[data-backdrop-buy]\")\n    };\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal1);\n    function toggleModal1() {\n        refs.backdrop2.classList.toggle(\"is-hidden-buy\");\n    }\n    refs.openModalBtn.forEach((elem)=>elem.addEventListener(\"click\", toggleModal1));\n})();\nfunction $5841c9197f87e075$var$validation(form) {\n    function removeError(input) {\n        const parent = input.parentNode;\n        if (parent.classList.contains(\"error\")) {\n            parent.querySelector(\".error-label\").remove();\n            parent.classList.remove(\"error\");\n        }\n    }\n    function createError(input, text) {\n        const parent = input.parentNode;\n        const errorLabel = document.createElement(\"label\");\n        errorLabel.classList.add(\"error-label\");\n        errorLabel.textContent = text;\n        parent.classList.add(\"error\");\n        parent.append(errorLabel);\n    }\n    let result = true;\n    const allInputs = form.querySelectorAll(\"input\");\n    for (const input of allInputs){\n        removeError(input);\n        if (input.dataset.minLength) {\n            if (input.value.length < input.dataset.minLength) {\n                removeError(input);\n                createError(input, `Min. length: ${input.dataset.minLength}`);\n                result = false;\n            }\n        }\n        if (input.dataset.maxLength) {\n            if (input.value.length > input.dataset.maxLength) {\n                removeError(input);\n                createError(input, `Max. length: ${input.dataset.maxLength}`);\n                result = false;\n            }\n        }\n        if (input.dataset.required == \"true\") {\n            if (input.value == \"\") {\n                removeError(input);\n                createError(input, \"Поле не заполнено!\");\n                result = false;\n            }\n        }\n    }\n    return result;\n}\nconst $5841c9197f87e075$var$refsDiscount = {\n    openModalBtn: document.querySelector(\"[data-open-discount]\"),\n    closeModalBtn: document.querySelector(\"[data-close-discount]\"),\n    backdrop4: document.querySelector(\"[data-backdrop-discount]\"),\n    discountContainer: document.querySelector(\".discount-container\")\n};\nfunction $5841c9197f87e075$var$toggleModal() {\n    $5841c9197f87e075$var$refsDiscount.backdrop4.classList.toggle(\"is-hidden-discount\");\n}\ndocument.getElementById(\"form_buy-now\").addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    if ($5841c9197f87e075$var$validation(this) === true) {\n        const TOKEN = \"\";\n        const CHAT_ID = \"-1001917308774\";\n        const URI_API = `https://api.telegram.org/bot${TOKEN}/sendMessage`;\n        const success = document.getElementById(\"success\");\n        $5841c9197f87e075$var$refsDiscount.openModalBtn.addEventListener(\"click\", $5841c9197f87e075$var$toggleModal);\n        $5841c9197f87e075$var$refsDiscount.closeModalBtn.addEventListener(\"click\", $5841c9197f87e075$var$toggleModal);\n        document.getElementById(\"form_buy-now\").addEventListener(\"submit\", function(e) {\n            e.preventDefault();\n            let message = `<b>Simply Chocolate Form</b>\\n`;\n            message += `<b>Name: </b> <i>${this.name.value}</i> \\n`;\n            message += `<b>Surname: </b> <i>${this.surname.value}</i> \\n`;\n            message += `<b>Email: </b> ${this.email.value} \\n`;\n            message += `<b>Phone: </b> ${this.phonenum.value} \\n`;\n            message += `<b>Card: </b> ${this.cardnum.value} \\n`;\n            message += `<b>Comment: </b> ${this.comment.value}`;\n            axios.post(URI_API, {\n                chat_id: CHAT_ID,\n                parse_mode: \"html\",\n                text: message\n            }).then((res)=>{\n                this.name.value = \"\";\n                this.surname.value = \"\";\n                this.email.value = \"\";\n                this.phonenum.value = \"\";\n                this.cardnum.value = \"\";\n                this.comment.value = \"\";\n            // success.style.display = 'block';\n            // success.innerHTML = 'Message Send';\n            }).catch((err)=>{\n                console.warn(err);\n            }).finally(()=>{\n                // console.log('The end');\n                $5841c9197f87e075$var$refsDiscount.openModalBtn.removeEventListener(\"click\", $5841c9197f87e075$var$toggleModal);\n                document.querySelector(\"[data-backdrop-buy]\").classList.toggle(\"is-hidden-buy\");\n            });\n        });\n    }\n});\n\n})();\n//# sourceMappingURL=index.97f142d0.js.map\n","(() => {\n  const refs = {\n    openModalBtn: document.querySelectorAll('[data-open-buy]'),\n    closeModalBtn: document.querySelector('[data-close-buy]'),\n    backdrop2: document.querySelector('[data-backdrop-buy]'),\n  };\n  refs.closeModalBtn.addEventListener('click', toggleModal1);\n\n  function toggleModal1() {\n    refs.backdrop2.classList.toggle('is-hidden-buy');\n  }\n  refs.openModalBtn.forEach(elem =>\n    elem.addEventListener('click', toggleModal1)\n  );\n})();\n\nfunction validation(form) {\n  function removeError(input) {\n    const parent = input.parentNode;\n\n    if (parent.classList.contains('error')) {\n      parent.querySelector('.error-label').remove();\n      parent.classList.remove('error');\n    }\n  }\n\n  function createError(input, text) {\n    const parent = input.parentNode;\n    const errorLabel = document.createElement('label');\n\n    errorLabel.classList.add('error-label');\n    errorLabel.textContent = text;\n\n    parent.classList.add('error');\n\n    parent.append(errorLabel);\n  }\n\n  let result = true;\n\n  const allInputs = form.querySelectorAll('input');\n\n  for (const input of allInputs) {\n    removeError(input);\n\n    if (input.dataset.minLength) {\n      if (input.value.length < input.dataset.minLength) {\n        removeError(input);\n        createError(input, `Min. length: ${input.dataset.minLength}`);\n        result = false;\n      }\n    }\n\n    if (input.dataset.maxLength) {\n      if (input.value.length > input.dataset.maxLength) {\n        removeError(input);\n        createError(input, `Max. length: ${input.dataset.maxLength}`);\n        result = false;\n      }\n    }\n\n    if (input.dataset.required == 'true') {\n      if (input.value == '') {\n        removeError(input);\n        createError(input, 'Поле не заполнено!');\n        result = false;\n      }\n    }\n  }\n\n  return result;\n}\n\nconst refsDiscount = {\n  openModalBtn: document.querySelector('[data-open-discount]'),\n  closeModalBtn: document.querySelector('[data-close-discount]'),\n  backdrop4: document.querySelector('[data-backdrop-discount]'),\n  discountContainer: document.querySelector('.discount-container'),\n};\n\nfunction toggleModal() {\n  refsDiscount.backdrop4.classList.toggle('is-hidden-discount');\n}\n\ndocument\n  .getElementById('form_buy-now')\n  .addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    if (validation(this) === true) {\n      const TOKEN = '';\n      const CHAT_ID = '-1001917308774';\n      const URI_API = `https://api.telegram.org/bot${TOKEN}/sendMessage`;\n      const success = document.getElementById('success');\n\n      refsDiscount.openModalBtn.addEventListener('click', toggleModal);\n      refsDiscount.closeModalBtn.addEventListener('click', toggleModal);\n\n      document\n        .getElementById('form_buy-now')\n        .addEventListener('submit', function (e) {\n          e.preventDefault();\n\n          let message = `<b>Simply Chocolate Form</b>\\n`;\n          message += `<b>Name: </b> <i>${this.name.value}</i> \\n`;\n          message += `<b>Surname: </b> <i>${this.surname.value}</i> \\n`;\n          message += `<b>Email: </b> ${this.email.value} \\n`;\n          message += `<b>Phone: </b> ${this.phonenum.value} \\n`;\n          message += `<b>Card: </b> ${this.cardnum.value} \\n`;\n          message += `<b>Comment: </b> ${this.comment.value}`;\n\n          axios\n            .post(URI_API, {\n              chat_id: CHAT_ID,\n              parse_mode: 'html',\n              text: message,\n            })\n            .then(res => {\n              this.name.value = '';\n              this.surname.value = '';\n              this.email.value = '';\n              this.phonenum.value = '';\n              this.cardnum.value = '';\n              this.comment.value = '';\n              // success.style.display = 'block';\n              // success.innerHTML = 'Message Send';\n            })\n            .catch(err => {\n              console.warn(err);\n            })\n            .finally(() => {\n              // console.log('The end');\n              refsDiscount.openModalBtn.removeEventListener(\n                'click',\n                toggleModal\n              );\n              document\n                .querySelector('[data-backdrop-buy]')\n                .classList.toggle('is-hidden-buy');\n            });\n        });\n    }\n  });"],"names":["refs","openModalBtn","document","querySelectorAll","closeModalBtn","querySelector","backdrop2","toggleModal1","classList","toggle","addEventListener","forEach","elem","$5841c9197f87e075$var$refsDiscount","backdrop4","discountContainer","$5841c9197f87e075$var$toggleModal","getElementById","event","preventDefault","$5841c9197f87e075$var$validation","form","removeError","input","parent","parentNode","contains","remove","createError","text","errorLabel","createElement","add","textContent","append","result","allInputs","dataset","minLength","value","length","maxLength","required","e","message","name","surname","email","phonenum","cardnum","comment","axios","post","chat_id","parse_mode","then","res","catch","err","console","warn","finally","removeEventListener"],"version":3,"file":"index.97f142d0.js.map"}