{"mappings":"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","sources":["<anon>","src/js/mailing-modal.js"],"sourcesContent":["var $1f04466826e6c796$exports = {};\n(()=>{\n    const refs = {\n        openModalBtn: document.querySelector(\"[data-open-mailing]\"),\n        closeModalBtn: document.querySelector(\"[data-close-mailing]\"),\n        backdropMailing: document.querySelector(\"[data-backdrop-mailing]\")\n    };\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n    // refs.backdropMailing.addEventListener('click', logBackdropClick);\n    function toggleModal() {\n        refs.backdropMailing.classList.toggle(\"is-hidden-mailing\");\n    }\n})();\nfunction $1f04466826e6c796$var$validation(form) {\n    function removeError(input) {\n        const parent = input.parentNode;\n        if (parent.classList.contains(\"error\")) // parent.querySelector('.error-label').remove();\n        parent.classList.remove(\"error\");\n    }\n    function createError(input, text) {\n        const parent = input.parentNode;\n        const errorLabel = document.createElement(\"label\");\n        errorLabel.classList.add(\"error-label-mailing\");\n        errorLabel.textContent = text;\n        parent.classList.add(\"error\");\n        parent.append(errorLabel);\n    }\n    let result = true;\n    const allInputs = form.querySelectorAll(\"input\");\n    for (const input of allInputs){\n        removeError(input);\n        if (input.dataset.minLength) {\n            if (input.value.length < input.dataset.minLength) {\n                removeError(input);\n                createError(input, `Min. length: ${input.dataset.minLength}`);\n                result = false;\n            }\n        }\n        if (input.dataset.maxLength) {\n            if (input.value.length > input.dataset.maxLength) {\n                removeError(input);\n                createError(input, `Max. length: ${input.dataset.maxLength}`);\n                result = false;\n            }\n        }\n        if (input.dataset.required == \"true\") {\n            if (input.value == \"\") {\n                removeError(input);\n                createError(input, \"Field is empty!\");\n                result = false;\n            }\n        }\n    }\n    return result;\n}\n// const refsThanks = {\n//   openModalBtn: document.querySelector('[data-open-thanks]'),\n//   closeModalBtn: document.querySelector('[data-close-thanks]'),\n//   backdrop5: document.querySelector('[data-backdrop-thanks]'),\n//   // discountContainer: document.querySelector('.discount-container'),\n// };\n//! bc5 - thanks\n//! bc3 - review-modal\n// function toggleModalThanks() {\n//   refsThanks.backdrop5.classList.toggle('is-hidden-thanks');\n// }\ndocument.getElementById(\"mailing-form\").addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    if ($1f04466826e6c796$var$validation(this) === true) {\n        const TOKEN = \"\";\n        const CHAT_ID = \"-1001917308774\";\n        const URI_API = `https://api.telegram.org/bot${TOKEN}/sendMessage`;\n        const success = document.getElementById(\"success\");\n        // refsThanks.openModalBtn.addEventListener('click', toggleModalThanks);\n        // refsThanks.closeModalBtn.addEventListener('click', toggleModalThanks);\n        document.getElementById(\"mailing-form\").addEventListener(\"submit\", function(e) {\n            e.preventDefault();\n            let message = `<b>Simply Chocolate Mailing</b>\\n`;\n            // message += `<b>Name: </b> <i>${this.commentname.value}</i> \\n`;\n            // message += `<b>Surname: </b> <i>${this.surname.value}</i> \\n`;\n            message += `<b>Email: </b> ${this.mailingmodalemail.value}`;\n            // message += `<b>Phone: </b> ${this.commentphonenum.value} \\n`;\n            // message += `<b>Card: </b> ${this.cardnum.value} \\n`;\n            // message += `<b>Comment: </b> ${this.commentreview.value}`;\n            axios.post(URI_API, {\n                chat_id: CHAT_ID,\n                parse_mode: \"html\",\n                text: message\n            }).then((res)=>{\n                // this.commentname.value = '';\n                // this.surname.value = '';\n                this.mailingmodalemail.value = \"\";\n                // this.commentphonenum.value = '';\n                // this.cardnum.value = '';\n                // this.commentreview.value = '';\n                success.style.display = \"block\";\n                success.innerHTML = \"Message Send\";\n            }).catch((err)=>{\n                console.warn(err);\n            }).finally(()=>{\n                document.querySelector(\"[data-backdrop-mailing]\").classList.toggle(\"is-hidden-mailing\");\n                console.log(\"The end\");\n            // refsThanks.openModalBtn.removeEventListener(\n            //   'click',\n            //   toggleModalThanks\n            // );\n            // document\n            //   .querySelector('[data-backdrop-review]')\n            //   .classList.toggle('is-hidden-review');\n            });\n        });\n    }\n}); // (() => {\n // const refs = {\n //   openModalBtn: document.querySelector('[data-open-thanks]'),\n //   closeModalBtn: document.querySelector('[data-close-thanks]'),\n //   backdrop5: document.querySelector('[data-backdrop-thanks]'),\n // };\n // refs.openModalBtn.addEventListener('click', toggleModal);\n // refs.closeModalBtn.addEventListener('click', toggleModal);\n // refs.backdrop5.addEventListener('click', logBackdropClick);\n // function toggleModal() {\n //   refs.backdrop5.classList.toggle('is-hidden-thanks');\n // }\n // })();\n\n\n//# sourceMappingURL=index.82f472ba.js.map\n","(() => {\n  const refs = {\n    openModalBtn: document.querySelector('[data-open-mailing]'),\n    closeModalBtn: document.querySelector('[data-close-mailing]'),\n    backdropMailing: document.querySelector('[data-backdrop-mailing]'),\n  };\n\n  refs.openModalBtn.addEventListener('click', toggleModal);\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n\n  // refs.backdropMailing.addEventListener('click', logBackdropClick);\n\n  function toggleModal() {\n    refs.backdropMailing.classList.toggle('is-hidden-mailing');\n  }\n})();\n\nfunction validation(form) {\n  function removeError(input) {\n    const parent = input.parentNode;\n\n    if (parent.classList.contains('error')) {\n      // parent.querySelector('.error-label').remove();\n      parent.classList.remove('error');\n    }\n  }\n\n  function createError(input, text) {\n    const parent = input.parentNode;\n    const errorLabel = document.createElement('label');\n\n    errorLabel.classList.add('error-label-mailing');\n    errorLabel.textContent = text;\n\n    parent.classList.add('error');\n\n    parent.append(errorLabel);\n  }\n\n  let result = true;\n\n  const allInputs = form.querySelectorAll('input');\n\n  for (const input of allInputs) {\n    removeError(input);\n\n    if (input.dataset.minLength) {\n      if (input.value.length < input.dataset.minLength) {\n        removeError(input);\n        createError(input, `Min. length: ${input.dataset.minLength}`);\n        result = false;\n      }\n    }\n\n    if (input.dataset.maxLength) {\n      if (input.value.length > input.dataset.maxLength) {\n        removeError(input);\n        createError(input, `Max. length: ${input.dataset.maxLength}`);\n        result = false;\n      }\n    }\n\n    if (input.dataset.required == 'true') {\n      if (input.value == '') {\n        removeError(input);\n        createError(input, 'Field is empty!');\n        result = false;\n      }\n    }\n  }\n\n  return result;\n}\n\n// const refsThanks = {\n//   openModalBtn: document.querySelector('[data-open-thanks]'),\n//   closeModalBtn: document.querySelector('[data-close-thanks]'),\n//   backdrop5: document.querySelector('[data-backdrop-thanks]'),\n//   // discountContainer: document.querySelector('.discount-container'),\n// };\n\n//! bc5 - thanks\n//! bc3 - review-modal\n\n// function toggleModalThanks() {\n//   refsThanks.backdrop5.classList.toggle('is-hidden-thanks');\n// }\n\ndocument\n  .getElementById('mailing-form')\n  .addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    if (validation(this) === true) {\n      const TOKEN = '';\n      const CHAT_ID = '-1001917308774';\n      const URI_API = `https://api.telegram.org/bot${TOKEN}/sendMessage`;\n      const success = document.getElementById('success');\n\n      // refsThanks.openModalBtn.addEventListener('click', toggleModalThanks);\n      // refsThanks.closeModalBtn.addEventListener('click', toggleModalThanks);\n\n      document\n        .getElementById('mailing-form')\n        .addEventListener('submit', function (e) {\n          e.preventDefault();\n\n          let message = `<b>Simply Chocolate Mailing</b>\\n`;\n          // message += `<b>Name: </b> <i>${this.commentname.value}</i> \\n`;\n          // message += `<b>Surname: </b> <i>${this.surname.value}</i> \\n`;\n          message += `<b>Email: </b> ${this.mailingmodalemail.value}`;\n          // message += `<b>Phone: </b> ${this.commentphonenum.value} \\n`;\n          // message += `<b>Card: </b> ${this.cardnum.value} \\n`;\n          // message += `<b>Comment: </b> ${this.commentreview.value}`;\n\n          axios\n            .post(URI_API, {\n              chat_id: CHAT_ID,\n              parse_mode: 'html',\n              text: message,\n            })\n            .then(res => {\n              // this.commentname.value = '';\n              // this.surname.value = '';\n              this.mailingmodalemail.value = '';\n              // this.commentphonenum.value = '';\n              // this.cardnum.value = '';\n              // this.commentreview.value = '';\n\n              success.style.display = 'block';\n              success.innerHTML = 'Message Send';\n            })\n            .catch(err => {\n              console.warn(err);\n            })\n            .finally(() => {\n              document\n                .querySelector('[data-backdrop-mailing]')\n                .classList.toggle('is-hidden-mailing');\n              console.log('The end');\n              // refsThanks.openModalBtn.removeEventListener(\n              //   'click',\n              //   toggleModalThanks\n              // );\n              // document\n              //   .querySelector('[data-backdrop-review]')\n              //   .classList.toggle('is-hidden-review');\n            });\n        });\n    }\n  });\n\n// (() => {\n// const refs = {\n//   openModalBtn: document.querySelector('[data-open-thanks]'),\n//   closeModalBtn: document.querySelector('[data-close-thanks]'),\n//   backdrop5: document.querySelector('[data-backdrop-thanks]'),\n// };\n\n// refs.openModalBtn.addEventListener('click', toggleModal);\n// refs.closeModalBtn.addEventListener('click', toggleModal);\n\n// refs.backdrop5.addEventListener('click', logBackdropClick);\n\n// function toggleModal() {\n//   refs.backdrop5.classList.toggle('is-hidden-thanks');\n// }\n// })();\n"],"names":["refs","openModalBtn","document","querySelector","closeModalBtn","backdropMailing","toggleModal","classList","toggle","addEventListener","getElementById","event","preventDefault","$1f04466826e6c796$var$validation","form","removeError","input","parent","parentNode","contains","remove","createError","text","errorLabel","createElement","add","textContent","append","result","allInputs","querySelectorAll","dataset","minLength","value","length","maxLength","required","success","e","message","mailingmodalemail","axios","post","chat_id","parse_mode","then","res","style","display","innerHTML","catch","err","console","warn","finally","log"],"version":3,"file":"index.82f472ba.js.map"}